"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[6670],{784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"engage/smart-contracts/buyback-contract/buyback-contract-overview","title":"BuyBack Contract Overview","description":"Buyback.sol is a smart contract designed to automate the repurchase of FACTR tokens from the open market using USDC. These repurchased tokens are locked and later distributed to designated vaults or custom addresses.","source":"@site/docs/engage/smart-contracts/buyback-contract/introduction.md","sourceDirName":"engage/smart-contracts/buyback-contract","slug":"/engage/smart-contracts/buyback-contract/buyback-contract-overview","permalink":"/docs/engage/smart-contracts/buyback-contract/buyback-contract-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/defactor-com/documentation/tree/main/docs/engage/smart-contracts/buyback-contract/introduction.md","tags":[{"inline":true,"label":"Buyback","permalink":"/docs/tags/buyback"}],"version":"current","sidebarPosition":1,"frontMatter":{"id":"buyback-contract-overview","title":"BuyBack Contract Overview","sidebar_position":1,"tags":["Buyback"]},"sidebar":"docSidebar","previous":{"title":"Staking Contract Config","permalink":"/docs/engage/smart-contracts/staking-contract/staking-contract-configuration"},"next":{"title":"Contract Actions","permalink":"/docs/engage/smart-contracts/buyback-contract/buyback-v2-contract-actions"}}');var t=s(4848),c=s(8453);const a={id:"buyback-contract-overview",title:"BuyBack Contract Overview",sidebar_position:1,tags:["Buyback"]},r=void 0,o={},d=[{value:"Contract Versions",id:"contract-versions",level:2},{value:"Buyback Smart Contract Documentation",id:"buyback-smart-contract-documentation",level:2},{value:"Overview",id:"overview",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Constants",id:"constants",level:3},{value:"Roles",id:"roles",level:3},{value:"Buyback",id:"buyback",level:3},{value:"Normal Buyback",id:"normal-buyback",level:4},{value:"Custom Buyback",id:"custom-buyback",level:4},{value:"Withdrawals",id:"withdrawals",level:3},{value:"Vaults (Normal Buybacks)",id:"vaults-normal-buybacks",level:4},{value:"Custom Addresses (Custom Buybacks)",id:"custom-addresses-custom-buybacks",level:4},{value:"Functions",id:"functions",level:3},{value:"Core Functions",id:"core-functions",level:4},{value:"Internal Logic",id:"internal-logic",level:4},{value:"Admin Utility",id:"admin-utility",level:4},{value:"Events",id:"events",level:3},{value:"Security Considerations",id:"security-considerations",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Buyback.sol"})," is a smart contract designed to automate the repurchase of FACTR tokens from the open market using USDC. These repurchased tokens are locked and later distributed to designated vaults or custom addresses."]}),"\n",(0,t.jsx)(n.h2,{id:"contract-versions",children:"Contract Versions"}),"\n",(0,t.jsx)(n.p,{children:"This contract has an audited version, with future iterations potentially expanding its flexibility, efficiency, and support for multi-chain integrations."}),"\n",(0,t.jsx)(n.h2,{id:"buyback-smart-contract-documentation",children:"Buyback Smart Contract Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Buyback contract enables automated and custom buybacks of FACTR tokens using USDC, leveraging Uniswap V3 swaps and a cooldown mechanism to ensure stability and prevent market manipulation. After a 1-year lock-up period, the repurchased FACTR is distributed to vaults or user-defined addresses."}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IERC20"}),": Interface for interacting with ERC20 tokens."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ISwapRouter"}),": Uniswap V3 router interface for token swaps."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"OracleLibrary"}),": Uniswap V3 price oracle for TWAP (time-weighted average price)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IUniswapV3Factory"}),", ",(0,t.jsx)(n.code,{children:"IUniswapV3Pool"}),": Uniswap V3 pool discovery and interaction."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ONE_THOUSAND"}),": Minimum USDC required for a buyback (1,000 USDC)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TEN_THOUSAND"}),": Basis points constant (10,000)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BUY_FREQUENCY"}),": Cooldown duration between buybacks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"POOL_1_FEE"}),", ",(0,t.jsx)(n.code,{children:"POOL_2_FEE"}),": Fee tiers for USDC-WETH and WETH-FACTR pools."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"THREE_HUNDRED"}),": Swap deadline time buffer (in seconds)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"roles",children:"Roles"}),"\n",(0,t.jsxs)(n.p,{children:["This contract doesn\u2019t implement a granular role-based system but does include privileged functions callable only by the designated ",(0,t.jsx)(n.code,{children:"RECOVERER"})," address."]}),"\n",(0,t.jsx)(n.h3,{id:"buyback",children:"Buyback"}),"\n",(0,t.jsx)(n.p,{children:"Two buyback mechanisms exist:"}),"\n",(0,t.jsx)(n.h4,{id:"normal-buyback",children:"Normal Buyback"}),"\n",(0,t.jsxs)(n.p,{children:["Executes a FACTR buyback using available USDC. Ensures optimal pricing via TWAP checks, and records swap details in a structured array (",(0,t.jsx)(n.code,{children:"buybacks"}),")."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"coolDownElapsed modifier"}),": Prevents execution if a cooldown period has not passed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"_sandwichProtectionCheck"}),": Checks if current prices deviate by more than 1% from TWAP."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"calculateOptimalAmount"}),": Calculates max amount to swap that meets price criteria."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"custom-buyback",children:"Custom Buyback"}),"\n",(0,t.jsx)(n.p,{children:"Allows any user to initiate a buyback by transferring at least 1,000 USDC and specifying a distribution of the resulting FACTR."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Distribution must sum to 10000 bps."}),"\n",(0,t.jsx)(n.li,{children:"Tokens are locked for 1 year before being claimable."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"withdrawals",children:"Withdrawals"}),"\n",(0,t.jsxs)(n.p,{children:["FACTR tokens are distributed ",(0,t.jsx)(n.strong,{children:"after a 1-year lock"})," via the ",(0,t.jsx)(n.code,{children:"buybackWithdraw"})," or ",(0,t.jsx)(n.code,{children:"customBuybackWithdraw"})," functions."]}),"\n",(0,t.jsx)(n.h4,{id:"vaults-normal-buybacks",children:"Vaults (Normal Buybacks)"}),"\n",(0,t.jsx)(n.p,{children:"FACTR is distributed equally among four vault addresses."}),"\n",(0,t.jsx)(n.h4,{id:"custom-addresses-custom-buybacks",children:"Custom Addresses (Custom Buybacks)"}),"\n",(0,t.jsx)(n.p,{children:"FACTR is split according to the predefined bps (basis points) distribution array."}),"\n",(0,t.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h4,{id:"core-functions",children:"Core Functions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"buyback"}),": Executes a standard buyback using contract-held USDC."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customBuyback"}),": Executes a user-funded buyback and stores custom distribution logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"buybackWithdraw"}),": Unlocks FACTR from a normal buyback after 1 year."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customBuybackWithdraw"}),": Unlocks FACTR from a custom buyback after 1 year."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fetchActiveLocks"}),": Returns an array of normal buybacks pending withdrawal."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fetchActiveCustomLocks"}),": Returns an array of custom buybacks pending withdrawal."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"internal-logic",children:"Internal Logic"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_sandwichProtectionCheck"}),": Reverts if price deviation exceeds 1%."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_executeSwap"}),": Handles Uniswap V3 swap execution with slippage protections."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"calculateOptimalAmount"}),": Determines optimal swap amount using TWAP."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"getOptimalTwapAmountThreshold"}),": Calculates TWAP-based minimum output for a given input."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"admin-utility",children:"Admin Utility"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"recoverERC20"}),": Allows recovery of tokens (excluding FACTR and USDC) stuck in the contract."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BuybackCall"}),": Emitted after a normal buyback."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CustomBuybackCall"}),": Emitted after a custom buyback."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Withdraw"}),": Emitted when FACTR is distributed from a normal buyback."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CustomWithdraw"}),": Emitted when FACTR is distributed from a custom buyback."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ERC20Recovered"}),": Emitted on recovery of any ERC20 tokens."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audit"}),": Contract was audited by Zokyo Security and passed with a 95/100 score. No critical issues were found. Minor findings were acknowledged or resolved."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TWAP checks"}),": Ensures price stability against MEV or price manipulation attacks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"1-Year Lock"}),": Prevents immediate token release post-buyback, enhancing tokenomics design."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fallback Protection"}),": Ensures that even if users delay custom withdraws, tokens remain locked safely."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Note: All buyback data is stored on-chain and accessible via public getters or events. Future UI integrations (e.g., Engage dashboard) are expected to display this information transparently."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(6540);const t={},c=i.createContext(t);function a(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);