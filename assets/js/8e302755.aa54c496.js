"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[1401],{2498:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var o=s(5893),r=s(1151);const l={title:"Postman Collection"},c=void 0,t={id:"back-end-api/erc20CollateralToken/default",title:"Postman Collection",description:"The Defactor Postman Collection comprises a suite of pre-configured API requests designed for seamless integration into the Postman application, facilitating access to the services offered by the Defactor API.",source:"@site/docs/back-end-api/erc20CollateralToken/default.md",sourceDirName:"back-end-api/erc20CollateralToken",slug:"/back-end-api/erc20CollateralToken/default",permalink:"/docs/back-end-api/erc20CollateralToken/default",draft:!1,unlisted:!1,editUrl:"https://github.com/defactor-com/documentation/tree/main/docs/back-end-api/erc20CollateralToken/default.md",tags:[],version:"current",frontMatter:{title:"Postman Collection"},sidebar:"docSidebar",previous:{title:"ERC20CollateralToken",permalink:"/docs/category/erc20collateraltoken"},next:{title:"Engage",permalink:"/docs/category/engage"}},i={},d=[{value:"Endpoints List (GraphQL and RESTful API)",id:"endpoints-list-graphql-and-restful-api",level:2},{value:"<code>Create Pool</code>",id:"create-pool",level:3},{value:"<code>Lend</code>",id:"lend",level:3},{value:"<code>Borrow</code>",id:"borrow",level:3},{value:"<code>Repay</code>",id:"repay",level:3},{value:"<code>Liquidate Pool</code>",id:"liquidate-pool",level:3},{value:"<code>ERC20 Approve</code>",id:"erc20-approve",level:3},{value:"<code>Get Usdc Address</code>",id:"get-usdc-address",level:3},{value:"<code>Get Pool</code>",id:"get-pool",level:3},{value:"<code>Get Pools</code>",id:"get-pools",level:3},{value:"<code>Get Total Pools</code>",id:"get-total-pools",level:3},{value:"<code>Get Lending</code>",id:"get-lending",level:3},{value:"<code>Get Total Lending</code>",id:"get-total-lending",level:3},{value:"<code>Get Lendings By Lender</code>",id:"get-lendings-by-lender",level:3},{value:"<code>Calculate Collateral Token Amount</code>",id:"calculate-collateral-token-amount",level:3},{value:"<code>Get Borrow</code>",id:"get-borrow",level:3},{value:"<code>Get Total Borrows</code>",id:"get-total-borrows",level:3},{value:"<code>Get Borrows by Borrower</code>",id:"get-borrows-by-borrower",level:3},{value:"<code>Get Liquidation Info</code>",id:"get-liquidation-info",level:3},{value:"<code>Calculate Repay Interest</code>",id:"calculate-repay-interest",level:3},{value:"<code>Get Liquidation Protocol Fee</code>",id:"get-liquidation-protocol-fee",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The Defactor Postman Collection comprises a suite of pre-configured API requests designed for seamless integration into the Postman application, facilitating access to the services offered by the Defactor API."}),"\n",(0,o.jsx)(n.p,{children:"This API offers dual modes of interaction with the smart contract: firstly, via the RESTful API; and secondly, through the GraphQL API."}),"\n",(0,o.jsxs)(n.p,{children:["Outlined below is a detailed overview of the API's functionalities, leveraging a designated instance of the ",(0,o.jsx)(n.code,{children:"erc20collateralpool"})," contract as the primary data source."]}),"\n",(0,o.jsx)(n.h2,{id:"endpoints-list-graphql-and-restful-api",children:"Endpoints List (GraphQL and RESTful API)"}),"\n",(0,o.jsx)(n.h3,{id:"create-pool",children:(0,o.jsx)(n.code,{children:"Create Pool"})}),"\n",(0,o.jsx)(n.p,{children:"Create a new pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"RESTful URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/api/rest/v1/create-pool"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($pool: CreatePoolInput!) {\n  v1CreatePool(pool: $pool) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "pool": {\n    "endTime": "2024-02-13T15:10:00.000",\n    "interest": 10,\n    "collateralDetails": {\n      "collateralToken": "0x81da82b49CD9Ee7b7d67B4655784581f30590eA1",\n      "collateralTokenChainlink": "0x997a6BCe1372baca6Bbb8db382Cb12F2dDca2b45",\n      "collateralTokenFactor": 115,\n      "collateralTokenPercentage": 60\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1CreatePool": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"lend",children:(0,o.jsx)(n.code,{children:"Lend"})}),"\n",(0,o.jsx)(n.p,{children:"Lend to a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/lend"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: LendInput!) {\n  v1Lend(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "poolId": "628",\n    "amount": "10000000"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1Lend": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"borrow",children:(0,o.jsx)(n.code,{children:"Borrow"})}),"\n",(0,o.jsx)(n.p,{children:"Borrow from a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/borrow"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($borrow: BorrowInput!) {\n  v1Borrow(borrow: $borrow) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "borrow": {\n    "poolId": "628",\n    "amount": "1000000"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1Borrow": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"repay",children:(0,o.jsx)(n.code,{children:"Repay"})}),"\n",(0,o.jsx)(n.p,{children:"Repay a loan to a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/repay"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: RepayInput!) {\n  v1Repay(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "poolId": "628",\n    "borrowId": "0"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1Repay": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"liquidate-pool",children:(0,o.jsx)(n.code,{children:"Liquidate Pool"})}),"\n",(0,o.jsx)(n.p,{children:"Liquidate a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/liquidate-pool"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($pool: GetPoolInput!) {\n  v1LiquidatePool(pool: $pool) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "pool": {\n    "poolId": "0"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1LiquidatePool": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"erc20-approve",children:(0,o.jsx)(n.code,{children:"ERC20 Approve"})}),"\n",(0,o.jsx)(n.p,{children:"Authorize a third party to expend a designated sum of funds."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": POST"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/erc20-approve"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($token: Erc20ApproveInput!) {\n  v1Erc20Approve(token: $token) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "token": {\n    "tokenAddress": "0x81da82b49CD9Ee7b7d67B4655784581f30590eA1",\n    "addressToAuthorize": "0x615e1f7970363Fbf7A1843eFc16f0E4e685610F9",\n    "amount": "1032002028946529865"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful completion of a request, the server will issue a status code of 200 along with a JSON object encapsulating pertinent blockchain transaction details. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1Erc20Approve": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-usdc-address",children:(0,o.jsx)(n.code,{children:"Get Usdc Address"})}),"\n",(0,o.jsxs)(n.p,{children:["Returns the configured ",(0,o.jsx)(n.code,{children:"usdc"})," contract address within the ",(0,o.jsx)(n.code,{children:"erc20collateraltoken"})," instance."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-usdc"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation {\n  v1GetUsdc {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsxs)(n.p,{children:["Upon successful request completion, the server will issue a status code of 200 alongside a JSON object containing the address information for ",(0,o.jsx)(n.code,{children:"usdc"}),". This object incorporates the following attributes:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetUsdc": {\n    "res": "0x80D9E7bC3D962878b292F9536b38E52e266a77Fd",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-pool",children:(0,o.jsx)(n.code,{children:"Get Pool"})}),"\n",(0,o.jsxs)(n.p,{children:["Retrieves the data associated with the specified ",(0,o.jsx)(n.code,{children:"poolId"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-pool"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($pool: GetPoolInput!) {\n  v1GetPool(pool: $pool) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "pool": {\n    "poolId": "415"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will return a status code of 200 along with a JSON object containing pool information. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetPool": {\n    "res": {\n      "borrowed": "0",\n      "collateralDetails": {\n        "collateralToken": "0x81da82b49CD9Ee7b7d67B4655784581f30590eA1",\n        "collateralTokenChainlink": "0x997a6BCe1372baca6Bbb8db382Cb12F2dDca2b45",\n        "collateralTokenFactor": "115",\n        "collateralTokenPercentage": "60"\n      },\n      "collateralTokenAmount": "0",\n      "collateralTokenAmountAtLiquidation": "0",\n      "endTime": "1706924460",\n      "interest": "10",\n      "lastUpdated": "0",\n      "lended": "0",\n      "liquidated": false,\n      "liquidatedCollateral": "0",\n      "repaid": "0",\n      "rewardPerToken": "0",\n      "rewardRate": "0",\n      "rewards": "0"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-pools",children:(0,o.jsx)(n.code,{children:"Get Pools"})}),"\n",(0,o.jsxs)(n.p,{children:["Retrieves the data associated with the ",(0,o.jsx)(n.code,{children:"pools"})," specified in the pagination parameters. If the offset exceeds the total number of pools, the API will return an empty list."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-pools"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($pool: PaginationInput!) {\n  v1GetPools(pool: $pool) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "pool": {\n    "offset": "0",\n    "limit": "10"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200, accompanied by a JSON object containing information regarding the pools. This object comprises the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetPools": {\n    "res": [\n      {\n        "borrowed": "2630",\n        "collateralDetails": {\n          "collateralToken": "0x81da82b49CD9Ee7b7d67B4655784581f30590eA1",\n          "collateralTokenChainlink": "0x997a6BCe1372baca6Bbb8db382Cb12F2dDca2b45",\n          "collateralTokenFactor": "115",\n          "collateralTokenPercentage": "50"\n        },\n        "collateralTokenAmount": "80353506350309",\n        "collateralTokenAmountAtLiquidation": "0",\n        "endTime": "1711925999",\n        "interest": "10",\n        "lastUpdated": "1707770796",\n        "lended": "6225000150",\n        "liquidated": false,\n        "liquidatedCollateral": "0",\n        "repaid": "470",\n        "rewardPerToken": "419803556",\n        "rewardRate": "1100",\n        "rewards": "0"\n      },\n      .\n      .\n      .\n    ],\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-total-pools",children:(0,o.jsx)(n.code,{children:"Get Total Pools"})}),"\n",(0,o.jsxs)(n.p,{children:["Returns the count of pools created within the current instance of ",(0,o.jsx)(n.code,{children:"erc20collateraltoken"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-total-pools"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation {\n  v1GetTotalPools {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing information about the total pools. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetTotalPools": {\n    "res": "672",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-lending",children:(0,o.jsx)(n.code,{children:"Get Lending"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves lending information."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-lending"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: GetLendingInput!) {\n  v1GetLending(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "poolId": "0",\n    "address": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd",\n    "lendingId": "0"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing comprehensive lending information. This object encompasses the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetLending": {\n    "res": {\n      "amount": "10000000",\n      "claimed": false,\n      "rewardPerTokenIgnored": "0"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-total-lending",children:(0,o.jsx)(n.code,{children:"Get Total Lending"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the amount of lending made for a specific pool and a provided address."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-total-lending"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: GetTotalLendingInput!) {\n  v1GetTotalLending(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "poolId": "0",\n    "address": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing comprehensive total lending information. This object incorporates the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetTotalLending": {\n    "res": "646",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-lendings-by-lender",children:(0,o.jsx)(n.code,{children:"Get Lendings By Lender"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves the lending participation for a lender in a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-lendings-by-lender"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: GetLendingsByLenderInput!) {\n  v1GetLendingsByLender(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "offset": "0",\n    "limit": "10",\n    "poolId": "0",\n    "lenderAddress": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the lending participation of a lender in a pool. This object incorporates the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetLendingsByLender": {\n    "res": [\n      {\n        "amount": "10000000",\n        "claimed": false,\n        "rewardPerTokenIgnored": "0"\n      },\n      .\n      .\n      .\n    ],\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"calculate-collateral-token-amount",children:(0,o.jsx)(n.code,{children:"Calculate Collateral Token Amount"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves the amount of collateral token required for borrowing."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/calculate-collateral-token-amount"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($borrow: CalculateCollateralTokenAmountInput!) {\n  v1CalculateCollateralTokenAmount(borrow: $borrow) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "borrow": {\n    "poolId": "0",\n    "amount": "10000000" // 10 USDC\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the collateral amount required to borrow the specified amount. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1CalculateCollateralTokenAmount": {\n    "res": "372006973844054693",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-borrow",children:(0,o.jsx)(n.code,{children:"Get Borrow"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the borrow information for a borrower in a given pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-borrow"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($borrow: GetBorrowInput!) {\n  v1GetBorrow(borrow: $borrow) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "borrow": {\n    "poolId": "0",\n    "borrowerAddress": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd",\n    "borrowId": "5"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing borrow information for a borrower in a pool. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetBorrow": {\n    "res": {\n      "amount": "10",\n      "borrowTime": "1706923529",\n      "collateralTokenAmount": "372006973844",\n      "repayTime": "0"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-total-borrows",children:(0,o.jsx)(n.code,{children:"Get Total Borrows"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the total borrows for a borrower in a pool."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-total-borrows"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($borrow: GetTotalBorrowsInput!) {\n  v1GetTotalBorrows(borrow: $borrow) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "borrow": {\n    "poolId": "0",\n    "borrowerAddress": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon a successful request, the server will respond with a status code of 200 and a JSON object containing the total borrow information for a borrower in a pool. The object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetTotalBorrows": {\n    "res": "164",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-borrows-by-borrower",children:(0,o.jsx)(n.code,{children:"Get Borrows by Borrower"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the borrows of a pool the borrower is participating in."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-borrows-by-borrower"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($borrow: GetBorrowsByBorrowerInput!) {\n  v1GetBorrowsByBorrower(borrow: $borrow) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "borrow": {\n    "poolId": "0",\n    "borrowerAddress": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd",\n    "offset": "0",\n    "limit": "10"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the borrows in which the borrower is participating in a pool. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "v1GetBorrowsByBorrower": {\n        "res": [\n            {\n                "amount": "10",\n                "borrowTime": "1706887089",\n                "collateralTokenAmount": "372006973844",\n                "repayTime": "1707255360"\n            },\n            .\n            .\n            .\n        ],\n        "success": true\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-liquidation-info",children:(0,o.jsx)(n.code,{children:"Get Liquidation Info"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves the liquidation information of a loan."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-liquidation-info"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($pool: GetPoolInput!) {\n  v1GetLiquidationInfo(pool: $pool) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "pool": {\n    "poolId": "0"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the amount required to be paid in order to liquidate the pool. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetLiquidationInfo": {\n    "res": {\n      "liquidatableAmountWithLiquidationFee": "2874604918977589116",\n      "liquidatableAmountWithProtocolFee": "2743941059024062338",\n      "remainingInterest": "2613277199070533400"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"calculate-repay-interest",children:(0,o.jsx)(n.code,{children:"Calculate Repay Interest"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the interest for a repayment of a borrow."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/calculate-repay-interest"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation ($loan: CalculateRepayInterestInput!) {\n  v1CalculateRepayInterest(loan: $loan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "loan": {\n    "poolId": "0",\n    "borrowerAddress": "0x0FEEe8332394aDc9eB439020DD8D38f4F93999Bd",\n    "borrowId": "136"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the interest to be paid for a borrow. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1CalculateRepayInterest": {\n    "res": "0",\n    "success": true\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"get-liquidation-protocol-fee",children:(0,o.jsx)(n.code,{children:"Get Liquidation Protocol Fee"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves the fee for liquidation."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"HTTP Request Method"}),": GET"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Request URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_RESTFUL_URL}}/v1/get-liquidation-protocol-fee"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"GraphQL URL"}),": ",(0,o.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation {\n  v1GetLiquidationProtocolFee {\n    res\n    success\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Request Body"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Response"})}),"\n",(0,o.jsx)(n.p,{children:"Upon successful request completion, the server will respond with a status code of 200 and a JSON object containing the liquidation fee. This object includes the following attributes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetLiquidationProtocolFee": {\n    "res": "5",\n    "success": true\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>t,a:()=>c});var o=s(7294);const r={},l=o.createContext(r);function c(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);