"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[6945],{6552:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"engage/back-end-api/graphqlApi/graphql-api-staking-v1","title":"Staking V1","description":"Plans","source":"@site/docs/engage/back-end-api/graphqlApi/stakingv1.md","sourceDirName":"engage/back-end-api/graphqlApi","slug":"/engage/back-end-api/graphqlApi/graphql-api-staking-v1","permalink":"/docs/engage/back-end-api/graphqlApi/graphql-api-staking-v1","draft":false,"unlisted":false,"editUrl":"https://github.com/defactor-com/documentation/tree/main/docs/engage/back-end-api/graphqlApi/stakingv1.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"graphql-api-staking-v1","title":"Staking V1","sidebar_position":2},"sidebar":"docSidebar","previous":{"title":"Authentication","permalink":"/docs/engage/back-end-api/graphqlApi/graphql-api-authentication"},"next":{"title":"Staking V2","permalink":"/docs/engage/back-end-api/graphqlApi/graphql-api-staking-v2"}}');var d=s(4848),i=s(8453);const l={id:"graphql-api-staking-v1",title:"Staking V1",sidebar_position:2},t=void 0,c={},a=[{value:"Plans",id:"plans",level:2},{value:"<code>Create Plan</code>",id:"create-plan",level:3},{value:"<code>Update Plan Metadata</code>",id:"update-plan-metadata",level:3},{value:"Positions",id:"positions",level:2},{value:"<code>Stake</code>",id:"stake",level:3},{value:"<code>Restake</code>",id:"restake",level:3},{value:"<code>Claim Rewards</code>",id:"claim-rewards",level:3},{value:"<code>Unstake</code>",id:"unstake",level:3},{value:"<code>Get Expected Rewards By User</code>",id:"get-expected-rewards-by-user",level:3},{value:"<code>Get Expected Rewards</code>",id:"get-expected-rewards",level:3},{value:"<code>Get Historical Value Locked</code>",id:"get-historical-value-locked",level:3},{value:"<code>Get Rewards Received By User</code>",id:"get-rewards-received-by-user",level:3},{value:"<code>Get Total Value Locked</code>",id:"get-total-value-locked",level:3},{value:"Token",id:"token",level:2},{value:"<code>Update Token Metadata</code>",id:"update-token-metadata",level:3},{value:"Ecosystem Wallet",id:"ecosystem-wallet",level:2},{value:"<code>Upsert Ecosystem Wallet</code>",id:"upsert-ecosystem-wallet",level:3},{value:"<code>Delete Ecosystem Wallet</code>",id:"delete-ecosystem-wallet",level:3},{value:"Error Reference",id:"error-reference",level:2},{value:"Error Response Format",id:"error-response-format",level:3},{value:"Types of Error",id:"types-of-error",level:3}];function o(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"plans",children:"Plans"}),"\n",(0,d.jsx)(n.h3,{id:"create-plan",children:(0,d.jsx)(n.code,{children:"Create Plan"})}),"\n",(0,d.jsx)(n.p,{children:"Create a new plan with the indicated APY and lock duration in seconds."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($plan: CreatePlanInput!) {\n  v1CreatePlan(plan: $plan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "plan": {\n    "network": "{{NETWORK_POLYGON}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "apr": "5",\n      "lockDuration": "7776000"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1CreatePlan": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"update-plan-metadata",children:(0,d.jsx)(n.code,{children:"Update Plan Metadata"})}),"\n",(0,d.jsxs)(n.p,{children:["Update the metadata of an existing plan using an unique plan identifier. Either a ",(0,d.jsx)(n.code,{children:"planId"})," or a ",(0,d.jsx)(n.code,{children:"txHash"})," must be provided, but not both."]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Param"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Description"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"planId"})}),(0,d.jsx)(n.td,{children:"The id that the smart contract set to the plan"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"txHash"})}),(0,d.jsx)(n.td,{children:"The hash of the transaction where the plan was added"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:"The new name of the plan"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"logo"})}),(0,d.jsx)(n.td,{children:"Optional field with the new logo of the plan"})]})]})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($position: CreatePlanInput!) {\n  v1Stake(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($plan: PlanMetadataInput!) {\n  v1UpdatePlanMetadata(plan: $plan) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "plan": {\n    "network": "{{NETWORK_BASE}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "planId": "2",\n      "name": "FACTR Plan - 25%",\n      "logo": "https://assets.coingecko.com/coins/images/19201/standard/jFLSu4U9_400x400.png?1696518648"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1UpdatePlanMetadata": {\n    "res": {\n      "id": "b2cd0c49-a354-4cd1-a0c5-0043ece4d12c"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"positions",children:"Positions"}),"\n",(0,d.jsx)(n.h3,{id:"stake",children:(0,d.jsx)(n.code,{children:"Stake"})}),"\n",(0,d.jsxs)(n.p,{children:["Stake the indicated amount to the plan. Once the ",(0,d.jsx)(n.code,{children:"stakingEndTime"})," period concludes, staking is not longer allowed."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($position: CreatePlanInput!) {\n  v1Stake(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "network": "{{NETWORK_POLYGON}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "planId": "0",\n      "amount": "1500000000000000000000"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1Stake": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"restake",children:(0,d.jsx)(n.code,{children:"Restake"})}),"\n",(0,d.jsx)(n.p,{children:"Unstake the position with the indicated stake index and stake the amount in the provided plan."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($position: ReopenPositionInput!) {\n  v1Restake(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "network": "{{NETWORK_POLYGON}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "stakeIndex": "0",\n      "planId": "0"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1Restake": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"claim-rewards",children:(0,d.jsx)(n.code,{children:"Claim Rewards"})}),"\n",(0,d.jsx)(n.p,{children:"Claim the available rewards of the position with the indicated stake index."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($position: PositionInput!) {\n  v1ClaimRewards(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "network": "{{NETWORK_POLYGON}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "stakeIndex": "0"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1ClaimRewards": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"unstake",children:(0,d.jsx)(n.code,{children:"Unstake"})}),"\n",(0,d.jsx)(n.p,{children:"Unstake the position with the indicated stake index."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": User Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($position: PositionInput!) {\n  v1Unstake(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "network": "{{NETWORK_POLYGON}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "stakeIndex": "0"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1Unstake": {\n    "res": {\n      "_type": "TransactionResponse",\n      "accessList": [],\n      "blobVersionedHashes": null,\n      "blockHash": null,\n      "blockNumber": null,\n      "chainId": "80001",\n      "from": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "gasLimit": "150012",\n      "gasPrice": null,\n      "hash": "0x68dc6f65b96a427c4c289371637b063bbe20d9841d6c8183f06e657ab10efb1e",\n      .\n      .\n      .\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"get-expected-rewards-by-user",children:(0,d.jsx)(n.code,{children:"Get Expected Rewards By User"})}),"\n",(0,d.jsxs)(n.p,{children:["Get the expected rewards by user for each open position. Filter by ",(0,d.jsx)(n.code,{children:"now"}),", ",(0,d.jsx)(n.code,{children:"day"}),", ",(0,d.jsx)(n.code,{children:"week"}),", ",(0,d.jsx)(n.code,{children:"month"}),", ",(0,d.jsx)(n.code,{children:"six-months"}),", ",(0,d.jsx)(n.code,{children:"year"})," or ",(0,d.jsx)(n.code,{children:"all"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Guest"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query ($position: RewardsByUserInput!) {\n  v1GetExpectedRewardsByUser(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "contractName": "{{STAKING}}",\n    "data": {\n      "address": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "networks": ["{{NETWORK_ETHEREUM}}", "{{NETWORK_POLYGON}}"],\n      "filterBy": ["day", "year"],\n      "withAccruedRewards": false\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetExpectedRewardsByUser": {\n    "res": {\n      "now": {\n        "symbol": "FACTR",\n        "token": 11.87201460235921,\n        "USD": 0.46357703076262946\n      },\n      "day": {\n        "symbol": "FACTR",\n        "token": 14.746729214231358,\n        "USD": 0.5758285490345839\n      }\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"get-expected-rewards",children:(0,d.jsx)(n.code,{children:"Get Expected Rewards"})}),"\n",(0,d.jsxs)(n.p,{children:["Get the expected rewards for each open position. Filter by ",(0,d.jsx)(n.code,{children:"now"}),", ",(0,d.jsx)(n.code,{children:"day"}),", ",(0,d.jsx)(n.code,{children:"week"}),", ",(0,d.jsx)(n.code,{children:"month"}),", ",(0,d.jsx)(n.code,{children:"six-months"}),", ",(0,d.jsx)(n.code,{children:"year"})," or ",(0,d.jsx)(n.code,{children:"all"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Guest"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query ($position: RewardsFilterInput!) {\n  v1GetExpectedRewards(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "contractName": "{{STAKING}}",\n    "data": {\n      "networks": ["{{NETWORK_ETHEREUM}}", "{{NETWORK_POLYGON}}"],\n      "filterBy": ["day", "year"],\n      "withAccruedRewards": false\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetExpectedRewardsByUser": {\n    "res": {\n      "day": {\n        "symbol": "FACTR",\n        "token": 11.87201460235921,\n        "USD": 0.46357703076262946\n      },\n      "week": {\n        "symbol": "FACTR",\n        "token": 14.746729214231358,\n        "USD": 0.5758285490345839\n      }\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"get-historical-value-locked",children:(0,d.jsx)(n.code,{children:"Get Historical Value Locked"})}),"\n",(0,d.jsxs)(n.p,{children:["Get the historical value locked in a period of time. Filter by ",(0,d.jsx)(n.code,{children:"now"}),", ",(0,d.jsx)(n.code,{children:"day"}),", ",(0,d.jsx)(n.code,{children:"week"}),", ",(0,d.jsx)(n.code,{children:"month"}),", ",(0,d.jsx)(n.code,{children:"six-months"}),", ",(0,d.jsx)(n.code,{children:"year"})," or ",(0,d.jsx)(n.code,{children:"all"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Guest"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query ($position: HistoricalInput!) {\n  v1GetHistoricalValueLocked(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "contractName": "{{STAKING}}",\n    "data": {\n      "networks": ["{{NETWORK_ETHEREUM}}", "{{NETWORK_POLYGON}}"],\n      "filterBy": ["day", "year", "week", "month"]\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetHistoricalValueLocked": {\n    "res": {\n      "year": {\n        "2024-08-01T00:00:00.000Z": {\n          "USD": 46,\n          "symbol": "FACTR",\n          "token": 1000\n        },\n        "2024-09-01T00:00:00.000Z": {\n          "USD": 46,\n          "symbol": "FACTR",\n          "token": 1000\n        },\n        "2024-10-01T00:00:00.000Z": {\n          "USD": 874.0087598522048,\n          "symbol": "FACTR",\n          "token": 19000.19043156967\n        }\n      }\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"get-rewards-received-by-user",children:(0,d.jsx)(n.code,{children:"Get Rewards Received By User"})}),"\n",(0,d.jsxs)(n.p,{children:["Get the rewards claimed by user. Filter by ",(0,d.jsx)(n.code,{children:"now"}),", ",(0,d.jsx)(n.code,{children:"day"}),", ",(0,d.jsx)(n.code,{children:"week"}),", ",(0,d.jsx)(n.code,{children:"month"}),", ",(0,d.jsx)(n.code,{children:"six-months"}),", ",(0,d.jsx)(n.code,{children:"year"})," or ",(0,d.jsx)(n.code,{children:"all"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Guest"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query ($position: RewardsByUserInput!) {\n  v1GetRewardsReceivedByUser(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "contractName": "{{STAKING}}",\n    "data": {\n      "address": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "networks": ["{{NETWORK_ETHEREUM}}", "{{NETWORK_POLYGON}}"],\n      "filterBy": ["day", "year"]\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetRewardsReceivedByUser": {\n    "res": {\n      "day": {\n        "symbol": "FACTR",\n        "token": 11.87201460235921,\n        "USD": 0.46357703076262946\n      },\n      "year": {\n        "symbol": "FACTR",\n        "token": 14.746729214231358,\n        "USD": 0.5758285490345839\n      }\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"get-total-value-locked",children:(0,d.jsx)(n.code,{children:"Get Total Value Locked"})}),"\n",(0,d.jsxs)(n.p,{children:["Get the expected rewards by user for each open position. Filter by ",(0,d.jsx)(n.code,{children:"now"}),", ",(0,d.jsx)(n.code,{children:"day"}),", ",(0,d.jsx)(n.code,{children:"week"}),", ",(0,d.jsx)(n.code,{children:"month"}),", ",(0,d.jsx)(n.code,{children:"six-months"}),", ",(0,d.jsx)(n.code,{children:"year"})," or ",(0,d.jsx)(n.code,{children:"all"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Guest"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"query ($position: GetTotalValueLockedInput!) {\n  v1GetTotalValueLocked(position: $position) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "position": {\n    "contractName": "{{STAKING}}",\n    "data": {\n      "networks": ["ethereum"],\n      "address": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1GetExpectedRewardsByUser": {\n    "res": {\n      "1726069636050": {\n        "FACTR": 11.87201460235921,\n        "USDC": 0.46357703076262946\n      },\n      "1726155976050": {\n        "FACTR": 14.746729214231358,\n        "USDC": 0.5758285490345839\n      }\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"token",children:"Token"}),"\n",(0,d.jsx)(n.h3,{id:"update-token-metadata",children:(0,d.jsx)(n.code,{children:"Update Token Metadata"})}),"\n",(0,d.jsx)(n.p,{children:"Update the metadata of the contract token."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($token: TokenMetadataInput!) {\n  v1UpdateTokenMetadata(token: $token) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "token": {\n    "network": "{{NETWORK_BASE}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "logo": "https://assets.coingecko.com/coins/images/19201/standard/jFLSu4U9_400x400.png?1696518648"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Response"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "v1UpdatePlanMetadata": {\n    "res": {\n      "contract_id": "f8f6925d-f20a-40a6-bb57-40bed4de188e"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"ecosystem-wallet",children:"Ecosystem Wallet"}),"\n",(0,d.jsx)(n.h3,{id:"upsert-ecosystem-wallet",children:(0,d.jsx)(n.code,{children:"Upsert Ecosystem Wallet"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($wallet: UpsertEcosystemWalletInput!) {\n  v1UpsertEcosystemWallet(wallet: $wallet) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "wallet": {\n    "network": "{{NETWORK_BASE}}",\n    "contractName": "{{STAKING}}",\n    "data": {\n      "label": "Governance long-term lock3",\n      "address": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5",\n      "initialAmount": 50000000,\n      "iconUrl": "https://realtyx.factr.app/"\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"delete-ecosystem-wallet",children:(0,d.jsx)(n.code,{children:"Delete Ecosystem Wallet"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Endpoint"}),": ",(0,d.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"mutation ($wallet: DeleteEcosystemWalletInput!) {\n  v1DeleteEcosystemWallet(wallet: $wallet) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "wallet": {\n    "network": "{{NETWORK_BASE}}",\n    "contractName": "{{STAKING}}",\n    "address": "0xa8983Fe59b2F08F9F1B3E833c5D47B256F7FE0d5"\n  }\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"error-reference",children:"Error Reference"}),"\n",(0,d.jsx)(n.h3,{id:"error-response-format",children:"Error Response Format"}),"\n",(0,d.jsxs)(n.p,{children:["The errors have the GraphQL error schema, an object with an ",(0,d.jsx)(n.code,{children:"errors"})," array property where each item has the following schema:"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"message"})}),(0,d.jsx)(n.td,{children:"The description of the error"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"extensions"})}),(0,d.jsx)(n.td,{children:"An object with the path to the field that caused the error, and the error code"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Examples"})}),"\n",(0,d.jsx)(n.p,{children:"The variable has a wrong type:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "expected a string for type \'String\', but found a number",\n      "extensions": {\n        "path": "$.selectionSet.v1Stake.args.position.amount",\n        "code": "validation-failed"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"The variable is missing in the request body:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "missing required field \'planId\'",\n      "extensions": {\n        "path": "$.selectionSet.v1Stake.args.position.planId",\n        "code": "validation-failed"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"The field does not exists or the role has no permissions:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "field \'v1CreatePlan\' not found in type: \'mutation_root\'",\n      "extensions": {\n        "path": "$.selectionSet.v1CreatePlan",\n        "code": "validation-failed"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"The variable is not in the request body schema:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "Unexpected variable stake",\n      "extensions": {\n        "path": "$",\n        "code": "bad-request"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"The GraphQL variables object is not a valid json:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "Error in $: Failed reading: satisfy. Expecting object value at X",\n      "extensions": {\n        "path": "$",\n        "code": "invalid-json"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"The endpoint does not exists:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "Endpoint not found",\n      "extensions": {\n        "path": "$",\n        "code": "not-found"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"There is no pool with the provided id:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "message": "Plan id 400 does not exist",\n      "extensions": {\n        "path": "$",\n        "code": "unexpected"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"types-of-error",children:"Types of Error"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"General"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Could not verify JWT: ",(0,d.jsx)(n.code,{children:"JWT error"})]}),(0,d.jsx)(n.td,{children:"The JWT is invalid"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Invalid request payload input"}),(0,d.jsx)(n.td,{children:"The input provided has a invalid value"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Cannot convert ",(0,d.jsx)(n.code,{children:"X"})," to BigInt"]}),(0,d.jsx)(n.td,{children:"The string provided is not a integer number"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Session"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"The account does not have sufficient permissions"}),(0,d.jsx)(n.td,{children:"The user is not authorized to perform the action"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Invalid message or signature"}),(0,d.jsx)(n.td,{children:"The message provided is invalid"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Invalid or expired session"}),(0,d.jsx)(n.td,{children:"The user session is invalid"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Addresses"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Neither Index nor Id can be negative"}),(0,d.jsx)(n.td,{children:"The index or id are negative"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Address does not follow the ethereum address format"}),(0,d.jsx)(n.td,{children:"The address provided is invalid"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Sender address is not admin"}),(0,d.jsxs)(n.td,{children:["The address does not have the required admin role in the ",(0,d.jsx)(n.code,{children:"staking"})," contract"]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Collateral token does not follow the ethereum address format"}),(0,d.jsx)(n.td,{children:"The collateral token address is invalid"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Plan"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Invalid plan id ",(0,d.jsx)(n.code,{children:"X"})]}),(0,d.jsx)(n.td,{children:"There is no plan with the provided id"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Plan id is not unique"}),(0,d.jsx)(n.td,{children:'"0x" does not uniquely identify a Plan'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Lock duration cannot be negative"}),(0,d.jsx)(n.td,{children:"The lock duration is not a positive number"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"APY cannot be negative"}),(0,d.jsx)(n.td,{children:"The APY is not a positive number"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Neither staking nor reward end date can be negative"}),(0,d.jsx)(n.td,{children:"Occurs when trying to set negative dates"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Staking end time cannot be less than rewards end time"}),(0,d.jsx)(n.td,{children:"Occurs when trying to set dates with a staking end time less than rewards end time"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Staking"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Stake amount too low"}),(0,d.jsx)(n.td,{children:"Must stake more than the minimum"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Invalid stake index"}),(0,d.jsx)(n.td,{children:"The position does not exists"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Staking has ended"}),(0,d.jsx)(n.td,{children:"The staking end time has passed and new positions cannot be created"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Stake already unstaked"}),(0,d.jsx)(n.td,{children:"An already unstaked position cannot be unstaked again"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Stake is locked"}),(0,d.jsx)(n.td,{children:"The lock duration has not passed"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Pagination"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Error Message"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Reason"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Offset cannot be negative"}),(0,d.jsx)(n.td,{children:"The provided offset is negative"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Limit cannot be negative or 0"}),(0,d.jsx)(n.td,{children:"The provided limit is negative or zero"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Max limit allowed is ",(0,d.jsx)(n.code,{children:"X"})]}),(0,d.jsx)(n.td,{children:"The provided limit is equal to the maximum results per page, use a smaller value"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var r=s(6540);const d={},i=r.createContext(d);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);