"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[2984],{226:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"engage/back-end-api/graphqlApi/utilities","title":"Utilities","description":"Token","source":"@site/docs/engage/back-end-api/graphqlApi/utilities.md","sourceDirName":"engage/back-end-api/graphqlApi","slug":"/engage/back-end-api/graphqlApi/utilities","permalink":"/docs/engage/back-end-api/graphqlApi/utilities","draft":false,"unlisted":false,"editUrl":"https://github.com/defactor-com/documentation/tree/main/docs/engage/back-end-api/graphqlApi/utilities.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Utilities","sidebar_position":5},"sidebar":"docSidebar","previous":{"title":"Vesting","permalink":"/docs/engage/back-end-api/graphqlApi/vesting"},"next":{"title":"Platform Overview","permalink":"/docs/engage/front-end-ui/intro"}}');var t=s(4848),r=s(8453);const l={title:"Utilities",sidebar_position:5},a=void 0,c={},o=[{value:"Token",id:"token",level:2},{value:"<code>Update Global Token Metadata</code>",id:"update-global-token-metadata",level:3},{value:"<code>Token Price</code>",id:"token-price",level:3},{value:"<code>Config</code>",id:"config",level:2},{value:"<code>Get Circulating Supply</code>",id:"get-circulating-supply",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"token",children:"Token"}),"\n",(0,t.jsx)(n.h3,{id:"update-global-token-metadata",children:(0,t.jsx)(n.code,{children:"Update Global Token Metadata"})}),"\n",(0,t.jsx)(n.p,{children:"Update the metadata of the contract token."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Roles"}),": Admin"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"mutation ($token: GlobalTokenMetadataInput!) {\n    v1UpdateGlobalTokenMetadata(token: $token) {\n        res\n        success\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "token": {\n    "data": {\n      "metadata": {\n        "logo": "https://assets.coingecko.com/coins/images/19201/standard/jFLSu4U9_400x400.png?1696518648"\n      },\n      "token": {\n        "tokenId": "b1c7d7c9-6f31-44de-9eb2-ab052fca7504"\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "v1UpdateGlobalPlanMetadata": {\n    "res": {\n      "id": "f8f6925d-f20a-40a6-bb57-40bed4de188e"\n    },\n    "success": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"token-price",children:(0,t.jsx)(n.code,{children:"Token Price"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GraphQL Body"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query getTokenPrice($symbol: String!) {\n  token_price: global_latest_token_price(where: {symbol:{_eq:$symbol}}){\n    price\n    symbol\n    date\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "symbol": "FACTR"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"config",children:(0,t.jsx)(n.code,{children:"Config"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query getConfig {\n  getConfig {\n    res\n    success\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"get-circulating-supply",children:(0,t.jsx)(n.code,{children:"Get Circulating Supply"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"HTTP Method"}),": POST"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"{{BASE_URL}}/v1/graphql"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GraphQL Body"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query v1GetCirculatingSupply ($global: CirculatingSupplyInput) {\n  v1GetCirculatingSupply (global: $global) {\n    res\n    success\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Params"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "global": {\n    "networks": ["{{NETWORK_BASE}}"]\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);