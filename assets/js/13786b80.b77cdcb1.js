"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[7126],{8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>d});var r=t(6540);const a={},i=r.createContext(a);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(i.Provider,{value:e},n.children)}},9148:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"engage/smart-contracts/staking-contract/staking-contract-configuration","title":"Staking Contract Config","description":"This guide provides the configuration parameters required to set up and deploy a Staking Contract in the Defactor Engage platform. The staking contract allows users to stake tokens and earn rewards based on predefined plans and parameters.","source":"@site/docs/engage/smart-contracts/staking-contract/staking-contract-config.md","sourceDirName":"engage/smart-contracts/staking-contract","slug":"/engage/smart-contracts/staking-contract/staking-contract-configuration","permalink":"/docs/engage/smart-contracts/staking-contract/staking-contract-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/defactor-com/documentation/tree/main/docs/engage/smart-contracts/staking-contract/staking-contract-config.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"staking-contract-configuration","title":"Staking Contract Config","sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"Contract Actions","permalink":"/docs/engage/smart-contracts/staking-contract/staking-v2-contract-actions"},"next":{"title":"BuyBack Contract Overview","permalink":"/docs/engage/smart-contracts/buyback-contract/buyback-contract-overview"}}');var a=t(4848),i=t(8453);const s={id:"staking-contract-configuration",title:"Staking Contract Config",sidebar_position:3},d="Staking Contract Configuration",o={},c=[{value:"Requirements for Staking Setup",id:"requirements-for-staking-setup",level:2},{value:"<strong>Admin Address</strong>",id:"admin-address",level:3},{value:"New Staking Plans Configuration",id:"new-staking-plans-configuration",level:2},{value:"<strong>Staking Configuration Parameters</strong>",id:"staking-configuration-parameters",level:3},{value:"Example Configuration",id:"example-configuration",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"staking-contract-configuration",children:"Staking Contract Configuration"})}),"\n",(0,a.jsxs)(e.p,{children:["This guide provides the configuration parameters required to set up and deploy a ",(0,a.jsx)(e.strong,{children:"Staking Contract"})," in the Defactor Engage platform. The staking contract allows users to stake tokens and earn rewards based on predefined plans and parameters."]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"requirements-for-staking-setup",children:"Requirements for Staking Setup"}),"\n",(0,a.jsx)(e.h3,{id:"admin-address",children:(0,a.jsx)(e.strong,{children:"Admin Address"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Purpose"}),": The admin address is required to manage the staking contract, configure parameters, and make updates."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Type"}),": ",(0,a.jsx)(e.code,{children:"eth address"})," (Ethereum-compatible address)"]}),"\n"]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"new-staking-plans-configuration",children:"New Staking Plans Configuration"}),"\n",(0,a.jsx)(e.p,{children:"For creating a new staking plan apart from the default plans, the following parameters need to be defined:"}),"\n",(0,a.jsx)(e.h3,{id:"staking-configuration-parameters",children:(0,a.jsx)(e.strong,{children:"Staking Configuration Parameters"})}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Parameter"}),(0,a.jsx)(e.th,{children:"Type"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"stakingToken"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"eth address"})}),(0,a.jsx)(e.td,{children:"The contract address of the token that will be staked."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"rewardToken"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"eth address"})}),(0,a.jsx)(e.td,{children:"The contract address of the token used for rewards."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"maxStaked"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"Maximum amount of tokens that can be staked in this plan."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"minStakeAmount"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"Minimum amount of tokens required to participate in staking."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"initialRatio"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"The initial ratio of rewards distributed per staked token."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"stakingEndTime"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"UTC Date"})}),(0,a.jsx)(e.td,{children:"The date and time (in UTC) when staking will end."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"rewardEndTime"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"UTC Date"})}),(0,a.jsx)(e.td,{children:"The date and time (in UTC) when reward distribution ends."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"lockDuration"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"The duration (in seconds) for which staked tokens are locked and cannot be withdrawn."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"apy"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"The annual percentage yield (APY) applied during the staking period before unlocking."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:(0,a.jsx)(e.strong,{children:"apyAfterUnlock"})}),(0,a.jsx)(e.td,{children:(0,a.jsx)(e.code,{children:"number"})}),(0,a.jsx)(e.td,{children:"The annual percentage yield (APY) applied after the staking period has ended and is unlocked."})]})]})]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",children:'adminAddress: "0x1234567890abcdef1234567890abcdef12345678" # Admin address for contract management\nstakingPlans:\n  - stakingToken: "0xabcdef1234567890abcdef1234567890abcdef12" # Staking token address\n    rewardToken: "0x1234567890abcdef1234567890abcdef12345678" # Reward token address\n    maxStaked: 100000 # Maximum staked amount\n    minStakeAmount: 100 # Minimum stake amount\n    initialRatio: 1.2 # Initial reward ratio\n    stakingEndTime: "2024-12-31T23:59:59Z" # Staking end time in UTC\n    rewardEndTime: "2025-01-31T23:59:59Z" # Reward end time in UTC\n    lockDuration: 2592000 # Lock duration (30 days in seconds)\n    apy: 12.5 # APY percentage before unlock\n    apyAfterUnlock: 5.0 # APY percentage after unlock\n'})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}}}]);