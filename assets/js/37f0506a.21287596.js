"use strict";(self.webpackChunkdocus=self.webpackChunkdocus||[]).push([[9903],{6004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"engage/smart-contracts/vesting-contract/vesting-contract-actions","title":"Contract Actions","description":"ERC20LazyVesting.sol is a smart contract for token vesting that utilizes off-chain Merkle proofs and on-chain validation to efficiently manage scalable vesting schedules. It allows beneficiaries or operators to claim vested tokens over time, based on predefined parameters encoded in Merkle trees.","source":"@site/docs/engage/smart-contracts/vesting-contract/contract-actions.md","sourceDirName":"engage/smart-contracts/vesting-contract","slug":"/engage/smart-contracts/vesting-contract/vesting-contract-actions","permalink":"/docs/engage/smart-contracts/vesting-contract/vesting-contract-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/defactor-com/documentation/tree/main/docs/engage/smart-contracts/vesting-contract/contract-actions.md","tags":[{"inline":true,"label":"Contract Actions","permalink":"/docs/tags/contract-actions"}],"version":"current","sidebarPosition":2,"frontMatter":{"id":"vesting-contract-actions","title":"Contract Actions","sidebar_position":2,"tags":["Contract Actions"]},"sidebar":"docSidebar","previous":{"title":"Vesting Contract Overview","permalink":"/docs/engage/smart-contracts/vesting-contract/vesting-contract-overview"},"next":{"title":"Vesting Contract Config","permalink":"/docs/engage/smart-contracts/vesting-contract/vesting-contract-configuration"}}');var i=t(4848),r=t(8453);const c={id:"vesting-contract-actions",title:"Contract Actions",sidebar_position:2,tags:["Contract Actions"]},o=void 0,a={},l=[{value:"Dependencies",id:"dependencies",level:2},{value:"Contract: ERC20LazyVesting",id:"contract-erc20lazyvesting",level:2},{value:"Functions",id:"functions",level:3},{value:"Internal / Private Functions",id:"internal--private-functions",level:3},{value:"Events",id:"events",level:3},{value:"Custom Errors / Validations",id:"custom-errors--validations",level:3},{value:"Notes",id:"notes",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ERC20LazyVesting.sol"})," is a smart contract for token vesting that utilizes off-chain Merkle proofs and on-chain validation to efficiently manage scalable vesting schedules. It allows beneficiaries or operators to claim vested tokens over time, based on predefined parameters encoded in Merkle trees."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["OpenZeppelin Contracts:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"AccessControl"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ReentrancyGuard"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Pausable"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"SafeERC20"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ERC20LazyVesting.interface.sol"})," \u2013 Interface for defining the ",(0,i.jsx)(n.code,{children:"VestingSchedule"})," struct and external function signatures."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"contract-erc20lazyvesting",children:"Contract: ERC20LazyVesting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Inherits:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"AccessControl"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ReentrancyGuard"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Pausable"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Uses ",(0,i.jsx)(n.code,{children:"SafeERC20"})," for secure ERC20 operations."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"release"}),": Releases vested tokens to the beneficiary or an operator, based on a valid Merkle proof."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"getReleasedAmount"}),": Returns how many tokens have already been released for a given schedule."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"getReleasableAmount"}),": Calculates how many tokens are currently available for release based on time and schedule configuration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"addValidMerkletreeRoot"}),": Allows an operator to mark a Merkle root as valid (enables vesting for related schedules)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"revokeSchedules"}),": Allows an operator to revoke one or more Merkle leaves, disabling further releases for them."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"requestWithdraw"}),": Admin function to initiate the withdrawal process for any tokens remaining in the contract (starts a 30-day timer)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"withdraw"}),": Admin function to execute withdrawal of tokens after the cooldown period ends."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pause"}),": Admin-only function to pause contract operations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"unpause"}),": Admin-only function to resume contract operations."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"internal--private-functions",children:"Internal / Private Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_validateVestingSchedule"}),": Validates a vesting schedule by computing and verifying its Merkle proof and root."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_computeRoot"}),": Computes the Merkle root based on a leaf and a proof path."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_getReleasableAmount"}),": Internal logic to calculate vested tokens depending on cliff, start, duration, and number of completed time slices."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Released"}),": Emitted when tokens are released to a beneficiary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MerkletreeRootAdded"}),": Emitted when a Merkle root is added or removed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SchedulesRevoked"}),": Emitted when one or more vesting schedules are revoked."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AnnounceTokensWithdrawal"}),": Emitted when a withdrawal is requested."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TokensWithdrawn"}),": Emitted when tokens are successfully withdrawn after the announcement period."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"custom-errors--validations",children:"Custom Errors / Validations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Only the ",(0,i.jsx)(n.code,{children:"beneficiary"})," or an account with ",(0,i.jsx)(n.code,{children:"OPERATOR_ROLE"})," can call ",(0,i.jsx)(n.code,{children:"release"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Schedules must pass Merkle proof validation and must not be revoked."}),"\n",(0,i.jsxs)(n.li,{children:["Withdrawals can only occur 30 days after ",(0,i.jsx)(n.code,{children:"requestWithdraw"})," is called."]}),"\n",(0,i.jsxs)(n.li,{children:["Only ",(0,i.jsx)(n.code,{children:"DEFAULT_ADMIN_ROLE"})," can manage withdrawal, pause, or unpause."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Merkle tree-based design enables massive scalability for vesting schedules while keeping on-chain storage low."}),"\n",(0,i.jsx)(n.li,{children:"Supports revocable vesting and secure operator-controlled execution."}),"\n",(0,i.jsx)(n.li,{children:"Time-based vesting ensures fairness and compliance with distribution strategies."}),"\n",(0,i.jsx)(n.li,{children:"The contract can be paused by admins in case of emergencies."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);